(function (window) {
    //CharMode函数
    //测试某个字符是属于哪一类.
    function CharMode(iN) {
        if (iN >= 48 && iN <= 57) //数字
            return 1;
        if (iN >= 65 && iN <= 90) //大写字母
            return 2;
        if (iN >= 97 && iN <= 122) //小写
            return 4;
        else
            return 8; //特殊字符
    }

    //bitTotal函数
    //计算出当前密码当中一共有多少种模式
    function bitTotal(num) {
        modes = 0;
        for (i = 0; i < 4; i++) {
            if (num & 1) modes++;
            num >>>= 1;
        }
        return modes;
    }

    //checkStrong函数
    //返回密码的强度级别

    function checkStrong(sPW) {
        if (sPW.length <= 7)
            return 0; //密码太短
        Modes = 0;
        for (i = 0; i < sPW.length; i++) {
            //测试每一个字符的类别并统计一共有多少种模式.
            Modes |= CharMode(sPW.charCodeAt(i));
        }
        return bitTotal(Modes);
    }

    function PWDStrength(pwd, ctrlid) {
        var originalBack = "#ccc",
			originalColor = "#fff",
			weekBack = "#DD127B",
			weekColor = "#fff",
			mediumBack = "#DD127B",
			mediumColor = "#fff",
			highBack = "#DD127B",
			highColor = "#fff",
			WColor,
			MColor,
			HColor,
			Wback,
			Mback,
			Hback;
        if (pwd.length == 0 || $.trim(pwd.val()).length == 0) {
            Wback = Mback = Hback = originalBack;
            WColor = MColor = HColor = originalColor;
        } else {
            var level = checkStrong(pwd.val());
            switch (level) {
                case 0:
                    WColor = weekColor;
                    MColor = HColor = originalColor;
                    Wback = weekBack;
                    Mback = Hback = originalBack;
                    break;
                case 1:
                    WColor = weekColor;
                    Wback = weekBack;
                    MColor = HColor = originalColor;
                    Mback = Hback = originalBack;
                    break;
                case 2:
                    WColor = MColor = mediumColor;
                    Wback = Mback = mediumBack;
                    HColor = originalColor;
                    Hback = originalBack;
                    break;
                default:
                    WColor = MColor = HColor = highColor;
                    Wback = Mback = Hback = highBack;
                    break;
            }
        }
        if (ctrlid.length != 0) {
            if (level == 0 || level == 1) {
                ctrlid.find("span").eq(0).css({ "background-color": "#DD127B" }).siblings('span').css({ "background-color": '#ccc' });
            } else {
                ctrlid.find("span").eq(level - 1).css({ "background-color": "#DD127B" }).siblings('span').css({ "background-color": '#ccc' });
            }
            /*ctrlid.find("span").first().css({"background-color":Wback,"color":WColor}).end()
							   .eq(1).css({"background-color":Mback,"color":MColor}).end()
							   .last().css({"background-color":Hback,"color":HColor});*/
        }
    }
    window.PWD = { PWDStrength: PWDStrength } || {};
})(window);